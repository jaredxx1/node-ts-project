{
  "compilerOptions": {
    "target": "ESNext",                               /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "module": "ESNext",                               /* Specify what module code is generated. */
    "moduleResolution": "node",                       /* Specify how TypeScript looks up a file from a given module specifier. */
    "rootDir": "src",
    "baseUrl": ".",                                   /* Specify the base directory to resolve non-relative module names. */
    "paths": {
      "~/*": ["./src/*"]
    },                                                /* Specify a set of entries that re-map imports to additional lookup locations. */
    "resolveJsonModule": true,                        /* Enable importing .json files. */
    "outDir": "build",                                /* Specify an output folder for all emitted files. */
    "isolatedModules": true,                          /* Ensure that each file can be safely transpiled without relying on other imports. */
    "allowSyntheticDefaultImports": true,             /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true,                          /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,         /* Ensure that casing is correct in imports. */

    "strict": true,                                   /* Enable all strict type-checking options. */
    "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true,                         /* When type checking, take into account 'null' and 'undefined'. */
    "useUnknownInCatchVariables": true,               /* Default catch clause variables as 'unknown' instead of 'any'. */
    "noUncheckedIndexedAccess": true,                 /* Add 'undefined' to a type when accessed using an index. */
    "skipDefaultLibCheck": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */
    "skipLibCheck": true                              /* Skip type checking all .d.ts files. */
  },
  "exclude": ["node_modules"],
  "include": ["src/**/*"]
}
